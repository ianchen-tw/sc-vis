{"version":3,"sources":["lib/const.ts","lib/validate.ts","components/Header.tsx","components/viz/ScopeArea.tsx","lib/scopeTree.ts","components/viz/XAxis.tsx","components/viz/TaskLifeTime.tsx","components/TaskDiagram.tsx","lib/render.ts","lib/defaultRecords.ts","components/App.tsx","index.tsx"],"names":["RunRecordErrStr","NOT_CLOSED","CLOSE_VOID","DUPLICATED","SCLogsErrStr","FIELD_MISSING_RUNRECORD","FIELD_MISSING_CONFIG","RUNRECORD_NOT_ARR","ajv","Ajv","ajvValidateJSONLogConfig","compile","optionalProperties","makeDirectScopeTransparent","type","ajvValidateJSONRunRecord","properties","time","name","desc","enum","parent","ExplainableErr","message","hintObject","undefined","Error","propertyExists","obj","property","Object","prototype","hasOwnProperty","call","validateSCLogs","json","raw","JSON","parse","Err","basicResult","Array","isArray","runRecords","config","rawRecord","constraintResults","records","openNodes","Map","r","has","set","delete","size","leftScopes","leftTasks","forEach","_","push","length","console","log","Ok","validateRunRecords","err","Logo","props","text","className","UploadFileButton","onConfigUpdate","onRecordsUpdate","hiddenFileInput","useRef","onRecordDataUploaded","file","a","result","ok","val","onClick","current","click","ref","onChange","e","target","files","GitHubLink","rel","href","Header","areaStyle","strokeOpacity","ScopeArea","width","height","fill","stroke","strokeWidth","style","VisNode","start","lifespan","children","this","end","addChildren","addEndTime","child","reportEndTimeToParent","NAME_ROOT_SCOPE","buildScopeTree","rootScope","scopeTable","record","get","s","XAxis","ticks","maxPos","max","map","t","pos","axis","transform","y2","strokeDasharray","textAnchor","dy","y","tickValue","lifetimeRectStyle","nameStyle","TaskLifeTime","outerHeight","innerHeight","yOffset","margin","TaskDiagram","scopeTree","visConfig","root","hierarchy","sum","d","sort","b","data","taskResult","dfsScope","node","startRow","curRow","childNode","value","range","endRow","visScope","scopeResults","scope","firstTask","lastTask","startTask","endTask","tasks","renderLayout","maxEndTime","innerWidth","xScale","scaleLinear","domain","yScale","scaleBand","paddingInner","paddingOuter","scopeAreas","x","bandwidth","wid","hei","taskLifeTimes","task","xTicks","viewBox","defaultRunRecords","defaultConfig","App","useState","setRecords","setConfig","useResizeObserver","finalWidth","finalHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9208a72.chunk.js","sourcesContent":["/* eslint max-classes-per-file: [\"error\", 999] */\n\n/**\n * RunRecord related error strings\n */\nexport class RunRecordErrStr {\n    public static readonly NOT_CLOSED = 'Node not closed';\n\n    public static readonly CLOSE_VOID = 'Node close before open';\n\n    public static readonly DUPLICATED = 'Node opened twice';\n}\n\nexport class SCLogsErrStr {\n    public static readonly FIELD_MISSING_RUNRECORD = 'Cannot find property: runRecords in sc-logs';\n\n    public static readonly FIELD_MISSING_CONFIG = 'Cannot find property: config in sc-logs';\n\n    public static readonly RUNRECORD_NOT_ARR = 'Field: `runRecords` must be an array';\n}\n","import { Ok, Err, Result } from 'ts-results';\nimport Ajv, { JTDSchemaType } from 'ajv/dist/jtd';\nimport { RunRecordErrStr, SCLogsErrStr } from './const';\nimport { RunRecord } from './types';\n\nconst ajv = new Ajv();\n\nexport interface LogConfig {\n  makeDirectScopeTransparent: boolean | undefined;\n}\n\nexport const SchemaLogConfig: JTDSchemaType<LogConfig> = {\n  optionalProperties: {\n    makeDirectScopeTransparent: { type: 'boolean' },\n  },\n};\n\nexport const SchemaRunRecord: JTDSchemaType<RunRecord> = {\n  properties: {\n    time: { type: 'float64' },\n    name: { type: 'string' },\n    desc: { enum: ['created', 'exited'] },\n    type: { enum: ['task', 'scope'] },\n  },\n  optionalProperties: {\n    parent: { type: 'string' },\n  },\n};\n\nexport const ajvValidateJSONLogConfig = ajv.compile(SchemaLogConfig);\nexport const ajvValidateJSONRunRecord = ajv.compile(SchemaRunRecord);\n\nexport interface SCLogsResult {\n  config: LogConfig;\n  runRecords: RunRecord[];\n}\n\nconst LogResultConfigId: keyof SCLogsResult = 'config';\nconst LogResultRunRecordsId: keyof SCLogsResult = 'runRecords';\n\nexport class ExplainableErr extends Error {\n  hintObject: any | undefined;\n\n  constructor(message: string | undefined, hintObject: any | undefined = undefined) {\n    super(message);\n    this.hintObject = hintObject;\n  }\n}\n\nconst propertyExists = (\n  obj: any,\n  property: string,\n) => Object.prototype.hasOwnProperty.call(obj, property);\n\n/**\n * Validate data-related constraints\n * @param records\n */\nexport const validateRunRecords = (records: RunRecord[]): Result<boolean, ExplainableErr> => {\n  // Validate data constraints\n\n  // Constraint: Created tasks must end\n  const openNodes: Map<string, RunRecord> = new Map();\n  for (const r of records) {\n    if (r.desc === 'created') {\n      if (openNodes.has(r.name)) {\n        return Err(new ExplainableErr(RunRecordErrStr.DUPLICATED, r));\n      }\n      openNodes.set(r.name, r);\n    } else if (r.desc === 'exited') {\n      if (!openNodes.has(r.name)) {\n        return Err(new ExplainableErr(RunRecordErrStr.CLOSE_VOID, r));\n      }\n      openNodes.delete(r.name);\n    }\n  }\n  if (openNodes.size > 0) {\n    const leftScopes: RunRecord[] = [];\n    const leftTasks: RunRecord[] = [];\n    openNodes.forEach((r, _) => {\n      switch (r.type) {\n        case 'scope': leftScopes.push(r); break;\n        case 'task': leftTasks.push(r); break;\n      }\n    });\n    if (leftScopes.length > 0) {\n      console.log('warning: scope not closed', leftScopes);\n    }\n    // Only un-closed task leads to error\n    if (leftTasks.length > 0) {\n      return Err(new ExplainableErr(RunRecordErrStr.NOT_CLOSED, [...openNodes]));\n    }\n  }\n  return Ok(true);\n  // Constraint: Must reference node that previous defined\n\n  // Constraint: Task node must be leaf nodes\n  //  task must have parent\n};\n\n/**\n * Validate the data to be SC Logs\n * @param json an object for validation as an SCLogsResult\n * @returns None\n */\nexport const validateSCLogs = (json: any): Result<SCLogsResult, ExplainableErr> => {\n  const raw = JSON.parse(json);\n\n  if (!propertyExists(raw, LogResultConfigId)) {\n    return Err(new ExplainableErr(SCLogsErrStr.FIELD_MISSING_CONFIG));\n  }\n  if (!propertyExists(raw, LogResultRunRecordsId)) {\n    return Err(new ExplainableErr(SCLogsErrStr.FIELD_MISSING_RUNRECORD));\n  }\n\n  const basicResult = raw as SCLogsResult;\n  if (!Array.isArray(basicResult.runRecords)) {\n    return Err(new ExplainableErr(SCLogsErrStr.RUNRECORD_NOT_ARR));\n  }\n\n  // Validate json format\n  if (!ajvValidateJSONLogConfig(basicResult.config)) {\n    return Err(new ExplainableErr('Failed to parse log config'));\n  }\n  for (const rawRecord of basicResult.runRecords) {\n    if (!ajvValidateJSONRunRecord(rawRecord)) {\n      return Err(new ExplainableErr('Failed to parse runRecord', rawRecord));\n    }\n  }\n\n  // Data-related constraints\n  const { runRecords } = basicResult;\n  const constraintResults = validateRunRecords(runRecords);\n  if (constraintResults.err) {\n    return constraintResults;\n  }\n\n  return Ok(raw as SCLogsResult);\n};\n","import { GoMarkGithub, GoCloudUpload } from 'react-icons/go';\nimport { useRef } from 'react';\n\nimport { RunRecord } from '../lib/types';\nimport { validateSCLogs, LogConfig } from '../lib/validate';\n\nconst LogoText = 'SC Visualizer';\n\ntype LogoProps = {\n  text: string\n}\nconst Logo = (props: LogoProps) => {\n  const { text } = props;\n\n  return (\n    <div className=\"font-black text-extralbold text-4xl antialiased\">\n      <span className=\"bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-blue-500\">\n        {text}\n      </span>\n    </div>\n  );\n};\n\ntype UploadFileButtonProps = {\n  onRecordsUpdate: (data: RunRecord[]) => void,\n  onConfigUpdate: (data: LogConfig) => void\n}\nconst UploadFileButton = (props: UploadFileButtonProps) => {\n  const { onConfigUpdate, onRecordsUpdate } = props;\n  const hiddenFileInput = useRef<HTMLInputElement>(null);\n\n  const onRecordDataUploaded = async (file: File) => {\n    const result = validateSCLogs(await file.text());\n    if (result.ok) {\n      const { runRecords, config } = result.val;\n      onRecordsUpdate(runRecords);\n      onConfigUpdate(config);\n    } else {\n      const err = result.val;\n      console.log(err);\n      console.log(err.message);\n      if (err.hintObject !== undefined) {\n        console.log('hint object', err.hintObject);\n      }\n    }\n  };\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"px-3 text-2xl hover:text-gray-500 flex\"\n        onClick={() => hiddenFileInput?.current?.click()}\n      >\n        <GoCloudUpload />\n      </button>\n      <input\n        className=\"hidden\"\n        ref={hiddenFileInput}\n        type=\"file\"\n        onChange={(e) => {\n          if (e?.target?.files) {\n            onRecordDataUploaded(e.target.files[0]);\n          }\n        }}\n      />\n    </>\n  );\n};\n\nconst GitHubLink = () => (\n  <a\n    className=\"hover:text-gray-500 antialiased px-3 text-2xl flex\"\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href=\"https://github.com/ianchen-tw/sc-vis\"\n  >\n    <GoMarkGithub />\n  </a>\n);\n\ntype HeaderProps = {\n  onRecordsUpdate: (data: RunRecord[]) => void;\n  onConfigUpdate: (data: LogConfig) => void;\n}\nconst Header = (props: HeaderProps) => {\n  const { onRecordsUpdate, onConfigUpdate } = props;\n  return (\n    <header className=\"pt-5\">\n      <div className=\"max-w-container flex items-center m-2\">\n        <div className=\"flex-none\">\n          <Logo text={LogoText} />\n        </div>\n        <div className=\"flex-grow flex justify-end\">\n          <UploadFileButton\n            onRecordsUpdate={onRecordsUpdate}\n            onConfigUpdate={onConfigUpdate}\n          />\n          <GitHubLink />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","const areaStyle = {\n  strokeOpacity: 0.3,\n};\n\ntype ScopeAreaProps = {\n  width: number\n  height: number\n}\n\nconst ScopeArea = (props: ScopeAreaProps) => {\n  const { width, height } = props;\n  return (\n    <g>\n      <rect\n        fill=\"None\"\n        stroke=\"#2460A7FF\"\n        strokeWidth=\"2\"\n        width={width}\n        height={height}\n        style={areaStyle}\n      />\n      {/* <text x=\"-15\" y=\"15\">\n        .\n      </text> */}\n    </g>\n  );\n};\n\nexport default ScopeArea;\n","import { VisNodeType, RunRecord } from './types';\n\nexport interface LifeSpan {\n  start: number;\n  end: number;\n}\n\nexport class VisNode {\n  name: string;\n\n  lifespan: LifeSpan;\n\n  children: VisNode[];\n\n  parent: VisNode | undefined;\n\n  type: VisNodeType;\n\n  // stop updating the lifetime of this node\n  #frozen: boolean;\n\n  constructor(name: string, type: VisNodeType,\n    start: number, parent: VisNode | undefined = undefined) {\n    this.name = name;\n    this.type = type;\n    this.lifespan = { start, end: start };\n    this.children = [];\n    this.parent = undefined;\n    this.#frozen = false;\n    parent?.addChildren(this);\n  }\n\n  end(end: number) {\n    this.addEndTime(end);\n    this.#frozen = true;\n    // console.log(`${this.name} froze with ${end}`)\n  }\n\n  addChildren(child: VisNode) {\n    // parent need to be scope type\n    if (this.type !== 'scope') {\n      throw Error('Only scope node can have children');\n    }\n    // parent need to start before children\n    if (this.lifespan.start <= child.lifespan.start) {\n      this.children.push(child);\n      child.parent = this;\n    } else {\n      throw Error(`Cannot add child start earlier than parent,\n                child_start: ${child.lifespan.start}\n                parent_start: ${this.lifespan.start}`);\n    }\n  }\n\n  protected addEndTime(end: number) {\n    if (this.#frozen === true) {\n      throw Error('Should not modify endtime of a frozen node');\n    }\n    // console.log(`${this.name} add end ${this.lifespan.end}->${end} `)\n    if (this.lifespan.end > end) {\n      throw Error('Should not shorten the lifespan of nodes');\n    }\n    this.lifespan.end = end;\n    this.reportEndTimeToParent();\n  }\n\n  // enlarge Parent's lifespan based on children's\n  reportEndTimeToParent() {\n    if (this.parent\n      && this.lifespan.end > this.parent.lifespan.end) {\n      this.parent.addEndTime(this.lifespan.end);\n    }\n  }\n}\n\nexport const NAME_ROOT_SCOPE = '__SC_VIS_ROOT_SCOPE__';\n\n/**\n * Build an scope Tree based on record given\n *  ps. would create a synthetic root node to contains all nodes given\n * @param records list of runrecords\n * @returns Rootnode of the ScopeTree\n */\nexport const buildScopeTree = (records: RunRecord[]): VisNode => {\n  const rootScope: VisNode = new VisNode(NAME_ROOT_SCOPE, 'scope', 0, undefined);\n  const scopeTable = new Map<string, VisNode>();\n\n  scopeTable.set(NAME_ROOT_SCOPE, rootScope);\n\n  records.forEach((record) => {\n    if (record.desc === 'created') {\n      const parent = scopeTable.get(record.parent ?? NAME_ROOT_SCOPE) ?? rootScope;\n\n      const s = new VisNode(record.name, record.type, record.time, parent);\n      scopeTable.set(s.name, s);\n    } else if (record.desc === 'exited') {\n      scopeTable.get(record.name)?.end(record.time);\n    } else {\n      throw new Error(`unknown desc: ${record}`);\n    }\n  });\n  return rootScope;\n};\n","import { max } from 'd3-array';\n\ntype LinearTick = {\n  tickValue: number;\n  pos: number\n}\n\ntype xAxisProps = {\n  ticks: LinearTick[];\n  height: number;\n};\n\nconst XAxis = (props: xAxisProps) => {\n  const { ticks, height } = props;\n  const maxPos = max(ticks.map((t) => t.pos)) ?? 0;\n  const labelYShift = 5;\n  const timeAxisLabelShift = 25;\n\n  const axis = ticks.map((t) => (\n    <g key={`tick-${t.tickValue}`} transform={`translate(${t.pos},0)`}>\n      <line\n        y2={height}\n        stroke=\"black\"\n        strokeDasharray=\"4, 7\"\n        style={{\n          strokeOpacity: 0.2,\n        }}\n      />\n      <text style={{ textAnchor: 'middle' }} dy=\".71em\" y={height + labelYShift}>{t.tickValue}</text>\n    </g>\n  ));\n  return (\n    <>\n      {axis}\n      <text dy=\".71em\" y={height + labelYShift} transform={`translate(${maxPos + timeAxisLabelShift},0)`}>Time</text>\n    </>\n  );\n};\n\nexport default XAxis;\n","const lifetimeRectStyle = {\n  fill: '#C7D3D4FF',\n};\n\nconst nameStyle = {\n  fill: '#603F83FF',\n};\n\ntype TaskLifeTimeProps = {\n  width: number\n  outerHeight: number\n  name: string\n}\nconst TaskLifeTime = (props: TaskLifeTimeProps) => {\n  const { width, outerHeight, name } = props;\n  const innerHeight = outerHeight * 0.9;\n  const yOffset = outerHeight * 0.3;\n\n  return (\n    <g transform={`translate(0,${yOffset})`}>\n      <rect\n        width={width}\n        height={innerHeight}\n        style={lifetimeRectStyle}\n      />\n      <text style={nameStyle} transform={`translate(5,${outerHeight * 0.8})`}>\n        {name}\n      </text>\n    </g>\n  );\n};\n\nexport default TaskLifeTime;\n","import { max } from 'd3-array';\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport { VisNode } from '../lib/scopeTree';\nimport ScopeArea from './viz/ScopeArea';\nimport { renderLayout } from '../lib/render';\nimport XAxis from './viz/XAxis';\nimport TaskLifeTime from './viz/TaskLifeTime';\nimport { LogConfig } from '../lib/validate';\n\nconst margin = {\n  top: 20, right: 100, bottom: 20, left: 20,\n};\n\ntype TaskDiagramProps = {\n  width?: number;\n  height?: number;\n  scopeTree: VisNode;\n  visConfig: LogConfig;\n}\n\nconst TaskDiagram = (props: TaskDiagramProps) => {\n  const {\n    width = 600, height = 400, scopeTree, visConfig,\n  } = props;\n\n  const { tasks, scopeResults } = renderLayout(scopeTree, visConfig);\n\n  const maxEndTime = max(tasks.map((t) => t.lifespan.end ?? 0)) ?? 0;\n\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.left - margin.right;\n\n  // scale\n  const xScale = scaleLinear()\n    .domain([0, maxEndTime])\n    .range([0, innerWidth]);\n\n  const yScale = scaleBand()\n    .domain(tasks.map((d) => d.name))\n    .range([0, innerHeight])\n    .paddingInner(0.5)\n    .paddingOuter(0.5);\n\n  const scopeAreas = scopeResults.map((result) => {\n    const x = xScale(result.scope.lifespan.start);\n    const y = yScale(result.startTask) ?? 0 - yScale.bandwidth() * 0.2;\n    const wid = xScale(result.scope.lifespan.end - result.scope.lifespan.start);\n    const hei = (yScale(result.endTask) ?? 1) - (yScale(result.startTask) ?? 0)\n      + yScale.bandwidth() * 1.4;\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <ScopeArea\n          width={wid}\n          height={hei}\n        // name={result.scope.name}\n        />\n      </g>\n    );\n  });\n\n  const taskLifeTimes = tasks.map((task) => {\n    const x = xScale(task.lifespan.start);\n    const y = yScale(task.name) ?? 0;\n    const wid = xScale(((task.lifespan.end ?? task.lifespan.start) - task.lifespan.start));\n    const hei = yScale.bandwidth();\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <TaskLifeTime\n          width={wid}\n          outerHeight={hei}\n          name={task.name}\n        />\n      </g>\n    );\n  });\n\n  const xTicks = xScale.ticks().map((tickValue) => ({\n    tickValue, pos: xScale(tickValue),\n  }));\n\n  return (\n    <svg\n      className=\"border-2 border-gray-300\"\n      width={width}\n      height={height}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <g transform={`translate(${margin.left},${margin.top})`}>\n        <XAxis\n          ticks={xTicks}\n          height={innerHeight}\n        />\n        {scopeAreas}\n        {taskLifeTimes}\n      </g>\n    </svg>\n  );\n};\n\nexport default TaskDiagram;\n","import { HierarchyNode, hierarchy } from 'd3-hierarchy';\nimport { NAME_ROOT_SCOPE, VisNode } from './scopeTree';\nimport { LogConfig } from './validate';\n\nexport interface ScopeResult {\n  startTask: string;\n  endTask: string;\n  scope: VisNode;\n}\n\nexport interface ScopeRange {\n  startRow: number;\n  endRow: number;\n}\n\nexport interface ReorderResult {\n  tasks: VisNode[];\n  scopeResults: ScopeResult[]\n}\n\nexport const renderLayout = (scopeTree: VisNode, visConfig: LogConfig): ReorderResult => {\n  const root = hierarchy<VisNode>(scopeTree);\n\n  root.sum((d) => (d.type === 'task' ? 1 : 0))\n    .sort((a, b) => a.data.lifespan.start - b.data.lifespan.start);\n\n  const taskResult: VisNode[] = [];\n  const scopeTable = new Map<VisNode, ScopeRange>();\n\n  // node.value: number of task node under this scope\n  const dfsScope = (node: HierarchyNode<VisNode>, startRow: number) => {\n    if (node.data.type === 'task') {\n      throw Error('Should not call this func with task');\n    }\n    if (node.children === undefined) {\n      // Scope with no tasks\n      return;\n    }\n\n    // current amount of allocated tasks in layout\n    let curRow = startRow;\n    node.children.forEach((childNode) => {\n      switch (childNode.data.type) {\n        case 'task':\n          taskResult.push(childNode.data);\n          break;\n        case 'scope':\n          dfsScope(childNode, curRow);\n          break;\n      }\n      curRow += childNode.value ?? 0;\n    });\n\n    const nmTasksUnderScope = node.value ?? 0;\n    const range: ScopeRange = { startRow, endRow: startRow + nmTasksUnderScope - 1 };\n    const visScope: VisNode = node.data;\n\n    // Do not show root scope (only used in building trees)\n    if (visScope.name !== NAME_ROOT_SCOPE) {\n      scopeTable.set(visScope, range);\n    }\n\n    if (\n      visConfig.makeDirectScopeTransparent\n      && visScope.children.length === 1\n      && visScope.children[0].type === 'task'\n    ) {\n      // For implementation like Python Trio, some scope are generated in the air.\n      // In that case, we will make those scopes transparent\n      scopeTable.delete(visScope);\n    }\n  };\n  dfsScope(root, 0);\n  // console.log(\"scope_table\", scope_table)\n  // console.log(task_result)\n  const scopeResults: ScopeResult[] = [];\n  scopeTable.forEach((range: ScopeRange, scope: VisNode) => {\n    const firstTask = taskResult[range.startRow];\n    const lastTask = taskResult[range.endRow];\n\n    scopeResults.push({\n      startTask: firstTask.name,\n      endTask: lastTask.name,\n      scope,\n    });\n  });\n  return { tasks: taskResult, scopeResults };\n};\n","import { RunRecord } from './types';\n\nconst defaultRunRecords: RunRecord[] = [\n  {\n    time: 0, name: 'A', desc: 'created', type: 'scope', parent: undefined,\n  },\n\n  {\n    time: 2, name: 'B', desc: 'created', type: 'scope', parent: 'A',\n  },\n  {\n    time: 3, name: 't2', desc: 'created', type: 'task', parent: 'B',\n  },\n  {\n    time: 4, name: 't2', desc: 'exited', type: 'task', parent: 'B',\n  },\n  {\n    time: 6, name: 'B', desc: 'exited', type: 'scope', parent: 'A',\n  },\n\n  {\n    time: 1, name: 't1', desc: 'created', type: 'task', parent: 'A',\n  },\n  {\n    time: 5, name: 't1', desc: 'exited', type: 'task', parent: 'A',\n  },\n\n  {\n    time: 7, name: 'A', desc: 'exited', type: 'scope', parent: undefined,\n  },\n\n  {\n    time: 3.5, name: 'C', desc: 'created', type: 'scope', parent: undefined,\n  },\n  {\n    time: 5, name: 't3', desc: 'created', type: 'task', parent: 'C',\n  },\n  {\n    time: 7, name: 't3', desc: 'exited', type: 'task', parent: 'C',\n  },\n  {\n    time: 4, name: 't4', desc: 'created', type: 'task', parent: 'C',\n  },\n  {\n    time: 9, name: 't4', desc: 'exited', type: 'task', parent: 'C',\n  },\n  {\n    time: 10, name: 'C', desc: 'exited', type: 'scope', parent: undefined,\n  },\n\n];\n\nexport default defaultRunRecords;\n","import { useState } from 'react';\nimport useResizeObserver from 'use-resize-observer';\n\nimport Header from './Header';\nimport TaskDiagram from './TaskDiagram';\nimport { buildScopeTree } from '../lib/scopeTree';\nimport defaultRunRecords from '../lib/defaultRecords';\nimport { LogConfig } from '../lib/validate';\n\nconst defaultConfig: LogConfig = { makeDirectScopeTransparent: false };\n\nconst App = () => {\n  const [records, setRecords] = useState(defaultRunRecords);\n  const [config, setConfig] = useState(defaultConfig);\n  const { ref, width, height } = useResizeObserver<HTMLDivElement>();\n\n  const finalWidth = (width ?? 0) * 1;\n  const finalHeight = (height ?? 0) * 0.8;\n  return (\n    <div className=\"container mx-auto px-4 h-screen flex flex-col\">\n      <div className=\"flex-none\">\n        <Header\n          onRecordsUpdate={(data) => setRecords(data)}\n          onConfigUpdate={(data) => setConfig(data)}\n        />\n      </div>\n      <div ref={ref} className=\"h-screen flex-grow justify-center\">\n        <TaskDiagram\n          scopeTree={buildScopeTree(records)}\n          visConfig={config}\n          width={finalWidth}\n          height={finalHeight}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}